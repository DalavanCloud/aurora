---
- name: Ensure PG is stopped
  become: True
  service:
    name: "{{ pp_servicename }}"
    state: stopped

- name: Move the data dir
  become: True
  command: "mv {{ pp_datadir }} {{ pp_datadir }}.bk"

- name: Install pip (driver dependency)
  become: True
  yum:
    name: python-pip
    state: present

- name: pip install pexpect
  become: True
  pip:
    name: pexpect
    executable: /usr/bin/pip

- name: Back up the primary server
  become: True
  expect:
    command: "/bin/pg_basebackup -h {{ hostvars[groups[item][0]]['ansible_ssh_host'] }} -U {{ replication_user }} -D {{ pp_datadir }}"
    responses:
      "Password:": "{{ replication_password }}"
  with_items: "{{ 'citus_prod_coordinator' if custom_repo else 'citus_coordinator' }}"

- name: Change the ownership of data directory
  become: True
  file:
    state: directory
    path: "{{ pp_datadir }}"
    owner: "{{ pp_superaccount }}"
    group: "{{ pp_superaccount }}"
    recurse: yes
    mode: 0700

- name: Update the postgres config file
  become: True
  lineinfile:
    dest: "{{ pp_datadir }}/postgresql.conf"
    regexp: 'hot_standby = (.*)'
    line: 'hot_standby = on'
  notify:
    - restart postgres

- name: Create the recovery conf
  become: True
  template:
    src: recovery.conf.j2
    dest: "{{ pp_datadir }}/recovery.conf"
    mode: "0600"
    owner: "{{ pp_superaccount }}"
    group: "{{ pp_superaccount }}"
